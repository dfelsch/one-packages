version: '3.7'

volumes:
  opennebula_mysql:
  opennebula_datastores:
  opennebula_secret_tls:
  opennebula_secret_ssh_host_keys:
  opennebula_oneadmin_auth:
  opennebula_oneadmin_ssh:
  opennebula_oneadmin_ssh_copyback:
  opennebula_logs:
  opennebula_shared_tmp:

networks:
  onenet:
#    external: true

services:
  opennebula-mysql:
    env_file:
      - ".env"
    #image: mariadb:10
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "mysqld"
    volumes:
      - opennebula_mysql:/var/lib/mysql
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

  opennebula-docker:
    env_file:
      - ".env"
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    init: true
    privileged: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "docker"
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

  opennebula-oned:
    env_file:
      - ".env"
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    init: true
    #privileged: true
    cap_add:
      - SYS_ADMIN
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "oned"
    depends_on:
      - opennebula-mysql
    ports:
      - "${DEPLOY_BIND_ADDR:-0.0.0.0}:${DEPLOY_ONED_EXTERNAL_PORT:-2633}:${DEPLOY_ONED_INTERNAL_PORT:-2633}"
    volumes:
      - opennebula_datastores:/var/lib/one/datastores
      - opennebula_secret_tls:/srv/one/secret-tls
      - opennebula_secret_ssh_host_keys:/srv/one/secret-ssh-host-keys
      - opennebula_oneadmin_auth:/var/lib/one/.one
      - opennebula_oneadmin_ssh:/var/lib/one/.ssh
      - opennebula_oneadmin_ssh_copyback:/var/lib/one/.ssh-copyback
      - opennebula_logs:/var/log/one
      - opennebula_shared_tmp:/var/tmp/sunstone
      - ./certs:/certs:ro
      - ./ssh:/ssh:ro
    devices:
      - /dev/fuse:/dev/fuse
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

  opennebula-sshd:
    env_file:
      - ".env"
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "sshd"
    ports:
      - "${DEPLOY_BIND_ADDR:-0.0.0.0}:${DEPLOY_SSH_EXTERNAL_PORT:-2222}:22"
    depends_on:
      - opennebula-oned
    volumes:
      - opennebula_datastores:/var/lib/one/datastores
      - opennebula_secret_ssh_host_keys:/srv/one/secret-ssh-host-keys
      - opennebula_oneadmin_ssh_copyback:/var/lib/one/.ssh
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

  opennebula-memcached:
    env_file:
      - ".env"
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "memcached"
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

  opennebula-scheduler:
    env_file:
      - ".env"
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "scheduler"
    depends_on:
      - opennebula-oned
    volumes:
      - opennebula_oneadmin_auth:/var/lib/one/.one
      - opennebula_logs:/var/log/one
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

  opennebula-flow:
    env_file:
      - ".env"
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "oneflow"
    depends_on:
      - opennebula-oned
    ports:
      - "${DEPLOY_BIND_ADDR:-0.0.0.0}:${DEPLOY_ONEFLOW_EXTERNAL_PORT:-2474}:${DEPLOY_ONEFLOW_INTERNAL_PORT:-2474}"
    volumes:
      - opennebula_oneadmin_auth:/var/lib/one/.one
      - opennebula_secret_tls:/srv/one/secret-tls:ro
      - opennebula_logs:/var/log/one
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

  opennebula-gate:
    env_file:
      - ".env"
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "onegate"
    depends_on:
      - opennebula-oned
    ports:
      - "${DEPLOY_BIND_ADDR:-0.0.0.0}:${DEPLOY_ONEGATE_EXTERNAL_PORT:-5030}:${DEPLOY_ONEGATE_INTERNAL_PORT:-5030}"
    volumes:
      - opennebula_oneadmin_auth:/var/lib/one/.one
      - opennebula_secret_tls:/srv/one/secret-tls:ro
      - opennebula_logs:/var/log/one
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

  opennebula-guacd:
    env_file:
      - ".env"
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "guacd"
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

  opennebula-sunstone:
    env_file:
      - ".env"
    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "sunstone"
    depends_on:
      - opennebula-oned
    ports:
      - "${DEPLOY_BIND_ADDR:-0.0.0.0}:${DEPLOY_SUNSTONE_EXTERNAL_PORT:-8080}:80"
      - "${DEPLOY_BIND_ADDR:-0.0.0.0}:${DEPLOY_SUNSTONE_EXTERNAL_TLS_PORT:-4443}:443"
      - "${DEPLOY_BIND_ADDR:-0.0.0.0}:${DEPLOY_SUNSTONE_EXTERNAL_VNC_PORT:-29876}:29876"
    volumes:
      - opennebula_secret_tls:/srv/one/secret-tls
      - opennebula_oneadmin_auth:/var/lib/one/.one
      - opennebula_logs:/var/log/one
      - opennebula_shared_tmp:/var/tmp/sunstone
      - ./certs:/certs:ro
    tmpfs:
      - /tmp
      - /run
      - /run/lock
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/frontend-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      replicas: 1

# TODO: uncomment when fireedge is ready
#  opennebula-fireedge:
#    env_file:
#      - ".env"
#    image: "${OPENNEBULA_FRONTEND_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_FRONTEND_IMAGE_TAG:-latest}"
#    init: true
#    restart: always
#    environment:
#      OPENNEBULA_FRONTEND_SERVICE: "fireedge"
#    depends_on:
#      - opennebula-oned
#    ports:
#      - "${DEPLOY_BIND_ADDR:-0.0.0.0}:${DEPLOY_FIREEDGE_EXTERNAL_PORT:-2616}:2616"
#    volumes:
#      - opennebula_oneadmin_auth:/var/lib/one/.one
#      - opennebula_logs:/var/log/one
#    tmpfs:
#      - /tmp
#      - /run
#      - /run/lock
#    networks:
#      - onenet
#    healthcheck:
#      test: ["CMD", "/frontend-healthcheck.sh"]
#      interval: "10s"
#      timeout: "10s"
#      retries: 3
#      start_period: "2m"
#    deploy:
#      restart_policy:
#        condition: any
#        delay: 10s
#      replicas: 1

