version: '3.7'

volumes:
  opennebula_certs:
  opennebula_db:
  opennebula_data:
  opennebula_sharedtmp:
  oneadmin_auth_data:
  oneadmin_ssh_priv_data:
  oneadmin_ssh_pub_data:

networks:
  onenet:
#    external: true

services:
  opennebula-mysql:
    env_file:
      - ".env"
    #image: mariadb:10
    image: "${OPENNEBULA_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_IMAGE_TAG:-latest}"
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "mysqld"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    volumes:
      - opennebula_db:/var/lib/mysql
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/onedocker-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: always
        delay: 10s
      replicas: 1

  opennebula-frontend:
    env_file:
      - ".env"
    image: "${OPENNEBULA_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_IMAGE_TAG:-latest}"
    init: true
    #privileged: true
    restart: always
    environment:
      CONTAINER_DEPLOYMENT_TYPE: "${CONTAINER_DEPLOYMENT_TYPE}"
      OPENNEBULA_FRONTEND_SERVICE: "oned"
      OPENNEBULA_FRONTEND_SSH_HOSTNAME: "${OPENNEBULA_FRONTEND_SSH_HOSTNAME}"
      OPENNEBULA_ONED_HOSTNAME: "${OPENNEBULA_ONED_HOSTNAME}"
      OPENNEBULA_ONED_APIPORT: "${OPENNEBULA_ONED_APIPORT}"
      OPENNEBULA_ONEGATE_HOSTNAME: "${OPENNEBULA_ONEGATE_HOSTNAME}"
      ONEADMIN_PASSWORD: "${ONEADMIN_PASSWORD}"
      ONEADMIN_SSH_PRIVKEY: "/ssh/id_rsa"
      ONEADMIN_SSH_PUBKEY: "/ssh/id_rsa.pub"
      MYSQL_HOST: "${MYSQL_HOST:-opennebula-mysql}"
      MYSQL_PORT: "${MYSQL_PORT:-3306}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    depends_on:
      - opennebula-mysql
    ports:
      - "${OPENNEBULA_FRONTEND_PUBLISH_ADDR:-0.0.0.0}:${OPENNEBULA_ONED_PUBLISHED_APIPORT:-2633}:${OPENNEBULA_ONED_APIPORT:-2633}"
    volumes:
      - opennebula_data:/data
      - opennebula_sharedtmp:/var/tmp/sunstone
      - oneadmin_auth_data:/oneadmin/auth_data
      - oneadmin_ssh_priv_data:/oneadmin/ssh_data
      - oneadmin_ssh_pub_data:/oneadmin/ssh_pub_data
      - ./ssh:/ssh:ro
      # enable docker.sock if you want the DockerHub marketplace to work...
      #- /var/run/docker.sock:/var/run/docker.sock
    tmpfs:
      - /run
      - /run/lock
      - /tmp
      - /var/tmp
      - /var/lib/containers
      - /var/lib/docker
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/onedocker-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: always
        delay: 10s
      replicas: 1

  opennebula-frontend-ssh:
    env_file:
      - ".env"
    image: "${OPENNEBULA_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "sshd"
    ports:
      - "${OPENNEBULA_FRONTEND_PUBLISH_ADDR:-0.0.0.0}:${OPENNEBULA_FRONTEND_PUBLISHED_SSHPORT:-2222}:22"
    depends_on:
      - opennebula-frontend
    volumes:
      - opennebula_data:/data
      - oneadmin_ssh_pub_data:/oneadmin/ssh_data
    tmpfs:
      - /run
      - /run/lock
      - /tmp
      - /var/tmp
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/onedocker-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: always
        delay: 10s
      replicas: 1

  opennebula-memcached:
    env_file:
      - ".env"
    image: "${OPENNEBULA_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "memcached"
    tmpfs:
      - /run
      - /run/lock
      - /tmp
      - /var/tmp
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/onedocker-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: always
        delay: 10s
      replicas: 1

  opennebula-scheduler:
    env_file:
      - ".env"
    image: "${OPENNEBULA_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "scheduler"
      OPENNEBULA_ONED_HOSTNAME: "${OPENNEBULA_ONED_HOSTNAME}"
      OPENNEBULA_ONED_APIPORT: "${OPENNEBULA_ONED_APIPORT}"
    depends_on:
      - opennebula-frontend
    volumes:
      - oneadmin_auth_data:/oneadmin/auth_data
    tmpfs:
      - /run
      - /run/lock
      - /tmp
      - /var/tmp
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/onedocker-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: always
        delay: 10s
      replicas: 1

  opennebula-flow:
    env_file:
      - ".env"
    image: "${OPENNEBULA_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "oneflow"
      OPENNEBULA_ONED_HOSTNAME: "${OPENNEBULA_ONED_HOSTNAME}"
      OPENNEBULA_ONED_APIPORT: "${OPENNEBULA_ONED_APIPORT}"
      OPENNEBULA_ONEFLOW_APIPORT: "${OPENNEBULA_ONEFLOW_APIPORT}"
    depends_on:
      - opennebula-frontend
    ports:
      - "${OPENNEBULA_FRONTEND_PUBLISH_ADDR:-0.0.0.0}:${OPENNEBULA_ONEFLOW_PUBLISHED_APIPORT:-2474}:${OPENNEBULA_ONEFLOW_APIPORT:-2474}"
    volumes:
      - oneadmin_auth_data:/oneadmin/auth_data
    tmpfs:
      - /run
      - /run/lock
      - /tmp
      - /var/tmp
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/onedocker-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: always
        delay: 10s
      replicas: 1

  opennebula-gate:
    env_file:
      - ".env"
    image: "${OPENNEBULA_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "onegate"
      OPENNEBULA_ONED_HOSTNAME: "${OPENNEBULA_ONED_HOSTNAME}"
      OPENNEBULA_ONED_APIPORT: "${OPENNEBULA_ONED_APIPORT}"
      OPENNEBULA_ONEFLOW_HOSTNAME: "${OPENNEBULA_ONEFLOW_HOSTNAME}"
      OPENNEBULA_ONEFLOW_APIPORT: "${OPENNEBULA_ONEFLOW_APIPORT}"
      OPENNEBULA_ONEGATE_APIPORT: "${OPENNEBULA_ONEGATE_APIPORT}"
    depends_on:
      - opennebula-frontend
    ports:
      - "${OPENNEBULA_FRONTEND_PUBLISH_ADDR:-0.0.0.0}:${OPENNEBULA_ONEGATE_PUBLISHED_APIPORT:-5030}:${OPENNEBULA_ONEGATE_APIPORT:-5030}"
    volumes:
      - oneadmin_auth_data:/oneadmin/auth_data
    tmpfs:
      - /run
      - /run/lock
      - /tmp
      - /var/tmp
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/onedocker-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: always
        delay: 10s
      replicas: 1

  opennebula-sunstone:
    env_file:
      - ".env"
    image: "${OPENNEBULA_IMAGE_NAME:-opennebula-frontend}:${OPENNEBULA_IMAGE_TAG:-latest}"
    init: true
    restart: always
    environment:
      OPENNEBULA_FRONTEND_SERVICE: "sunstone"
      OPENNEBULA_ONED_HOSTNAME: "${OPENNEBULA_ONED_HOSTNAME}"
      OPENNEBULA_ONED_APIPORT: "${OPENNEBULA_ONED_APIPORT}"
      OPENNEBULA_ONEFLOW_HOSTNAME: "${OPENNEBULA_ONEFLOW_HOSTNAME}"
      OPENNEBULA_ONEFLOW_APIPORT: "${OPENNEBULA_ONEFLOW_APIPORT}"
      OPENNEBULA_MEMCACHED_HOSTNAME: "${OPENNEBULA_MEMCACHED_HOSTNAME:-opennebula-memcached}"
      OPENNEBULA_SUNSTONE_HTTPD: "${OPENNEBULA_SUNSTONE_HTTPD}"
      OPENNEBULA_SUNSTONE_MEMCACHED: "${OPENNEBULA_SUNSTONE_MEMCACHED}"
      OPENNEBULA_SUNSTONE_HTTPPORT: "${OPENNEBULA_SUNSTONE_HTTPPORT:-9869}"
      OPENNEBULA_SUNSTONE_HTTPSPORT: "${OPENNEBULA_SUNSTONE_HTTPSPORT:-443}"
      # TODO: this is not ideal - but I need to match and/or redirect these ports...
      OPENNEBULA_SUNSTONE_PUBLISHED_HTTPPORT: "${OPENNEBULA_SUNSTONE_PUBLISHED_HTTPPORT:-9869}"
      OPENNEBULA_SUNSTONE_PUBLISHED_HTTPSPORT: "${OPENNEBULA_SUNSTONE_PUBLISHED_HTTPSPORT:-4443}"
      OPENNEBULA_SUNSTONE_HTTP_REDIRECT: "${OPENNEBULA_SUNSTONE_HTTP_REDIRECT}"
      OPENNEBULA_SUNSTONE_HTTPS_ONLY: "${OPENNEBULA_SUNSTONE_HTTPS_ONLY}"
      OPENNEBULA_SUNSTONE_HTTPS_ENABLED: "${OPENNEBULA_SUNSTONE_HTTPS_ENABLED}"
      OPENNEBULA_TLS_DOMAIN_LIST: "${OPENNEBULA_TLS_DOMAIN_LIST}"
      OPENNEBULA_TLS_CERT_BASE64: "${OPENNEBULA_TLS_CERT_BASE64}"
      OPENNEBULA_TLS_KEY_BASE64: "${OPENNEBULA_TLS_KEY_BASE64}"
      OPENNEBULA_TLS_CERT: "/certs/opennebula.crt"
      OPENNEBULA_TLS_KEY: "/certs/opennebula.key"
      OPENNEBULA_TLS_VALID_DAYS: "${OPENNEBULA_TLS_VALID_DAYS}"
    depends_on:
      - opennebula-frontend
    ports:
      - "${OPENNEBULA_FRONTEND_PUBLISH_ADDR:-0.0.0.0}:${OPENNEBULA_SUNSTONE_PUBLISHED_HTTPPORT:-9869}:${OPENNEBULA_SUNSTONE_HTTPPORT:-9869}"
      - "${OPENNEBULA_FRONTEND_PUBLISH_ADDR:-0.0.0.0}:${OPENNEBULA_SUNSTONE_PUBLISHED_HTTPSPORT:-4443}:${OPENNEBULA_SUNSTONE_HTTPSPORT:-443}"
      - "${OPENNEBULA_FRONTEND_PUBLISH_ADDR:-0.0.0.0}:${OPENNEBULA_SUNSTONE_PUBLISHED_VNCPORT:-29876}:29876"
    volumes:
      - opennebula_certs:/cert_data
      - opennebula_sharedtmp:/var/tmp/sunstone
      - oneadmin_auth_data:/oneadmin/auth_data
      - ./certs:/certs:ro
    tmpfs:
      - /run
      - /run/lock
      - /tmp
      - /var/tmp
    networks:
      - onenet
    healthcheck:
      test: ["CMD", "/onedocker-healthcheck.sh"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    deploy:
      restart_policy:
        condition: always
        delay: 10s
      replicas: 1

